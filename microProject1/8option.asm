format PE console

entry start

include 'win32a.inc'

section '.data' data readable writable

;-------Вариант 8 Гребенщиков Максим Михайлович БПИ194---------------------------------------------------------------------------------------------------------------------------------------
;-------Разработать программу, определяющую число чисел Перрена от 1 до беззнакового машинного слова-----------------------------------------------------------------------------------------


        formatNum db '%d', 10 , 0
        outputLine db 'Total Perrin numbers from 1 to unsigned machine word: %d', 10, 0

        one dd 3    ;Позиция x-3
        two dd 0    ;Позиция x-2
        three dd 2  ;Позиция x-1 ;Первые 3  числа не учитываем,
        four dd ?   ;Позиция x   ; 0 - не в диапазоне, а 3 и 2 - повторяются

        MAXWORD = 65535 ;Максимальное значение машинного слова + 1, так как в цикле строгое сравнение

section '.code' code readable executable
;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        start:
               call calcNumbs ;Запускаем функции
               call output

        finish:
               call [getch]
               push NULL
               call [ExitProcess]

;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

        macro shiftt
        {
                 mov edx, [two]   ;При каждой итерации сдвигаем наши числа на 1 влево
                 mov [one], edx
                 mov edx, [three]
                 mov [two], edx
                 mov edx , [four]
                 mov [three], edx
        }

;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

         calcNumbs:
                mov ebx, -1 ;Считаем итогове значение
                            ;Начальное -1, тк в цикле лишняя итерация
                lp:
                        add ebx, 1
                        mov eax, [one]
                        add eax, [two]  ;Вычисляем текущее число через сумму (x-2) + (x-3)
                        mov [four], eax

                        shiftt ;используем макрос сдвига

                        cmp [four], MAXWORD  ;Сравниваем текущее x с максимальным значение слова
                jl lp
                add ebx, -1 ;Повтор числа 5 в наборе - вычитаем 1
                ret

;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        output:
                push ebx        ;Выводи ответ в консоль
                push outputLine
                call [printf]
                jmp finish      ;Завершаем выполнение программы

;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

section '.idata' import data readable

        library kernel, 'kernel32.dll',\
                msvcrt, 'msvcrt.dll'

        import kernel,\
               ExitProcess, 'ExitProcess'

        import msvcrt,\
               printf, 'printf',\
               getch, '_getch',\
               scanf, 'scanf'
;------------------------------------------------------------------------------------------------------------------------------------------------------------------------